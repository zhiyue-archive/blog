<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[zhiyue]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.printf.me//"/>
  <updated>2015-06-08T07:55:14.866Z</updated>
  <id>http://blog.printf.me//</id>
  
  <author>
    <name><![CDATA[zhiyue]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用Docker部署IPython]]></title>
    <link href="http://blog.printf.me/2015/06/08/use-docker-deplay-ipython-notebook/"/>
    <id>http://blog.printf.me/2015/06/08/use-docker-deplay-ipython-notebook/</id>
    <published>2015-06-08T16:21:56.000Z</published>
    <updated>2015-06-08T07:55:14.866Z</updated>
    <content type="html"><![CDATA[<p><img src="http://zhiyue.qiniudn.com/15-6-8/63734849.jpg" alt="docker"><br><a id="more"></a></p>
<blockquote>
<p>本文的部署环境是Ubuntu 14.04 </p>
</blockquote>
<ul>
<li><p>Docker</p>
<blockquote>
<p>Docker 详细概念可以去search，简单来说就是把应用打包到一个容器里的轻量级系统虚拟化服务</p>
</blockquote>
</li>
<li><p>IPython Notebook</p>
<blockquote>
<p>IPython Notebook 既是一个交互计算平台，又是一个记录计算过程的「笔记本」。它由服务端和客户端两部分组成，其中服务端负责代码的解释与计算，而客户端负责与用户进行交互。 服务端可以运行在本机也可以运行在远程服务器，包含负责运算的 IPython kernel (与 QT Console 的 kernel 相同) 以及一个 HTTP/S 服务器 (Tornado)。 而客户端则是一个指向服务端地址的浏览器页面，负责接受用户的输入并负责渲染输出。</p>
</blockquote>
</li>
</ul>
<p>本文主要记录使用Docker 在服务器部署IPython Note 应用的过程。比传统的部署方案果然简单轻松不少。</p>
<h4 id="知识点">知识点</h4><ol>
<li>Docker 的基本概念</li>
<li>部署IPython 容器</li>
<li>使用Nginx 容器反向代理IPython </li>
</ol>
<h3 id="Docker_的基本概念">Docker 的基本概念</h3><p>下文的操作主要涉及Docker的一下几个知识点：</p>
<ul>
<li>Docker 的镜像(image)、容器(container)、仓库(registerie)</li>
<li>Docker 的安装</li>
<li>Docker 的基础用法</li>
<li>Docker的端口映射</li>
<li>Docker 数据卷</li>
<li>链接容器</li>
</ul>
<p>详细的信息可以自行搜索</p>
<h3 id="部署IPython">部署IPython</h3><h4 id="下载IPython_的镜像">下载IPython 的镜像</h4><p>官方Docker镜像<a href="https://registry.hub.docker.com/repos/ipython/" target="_blank" rel="external">地址</a>，里面包含5个镜像:</p>
<ul>
<li>notebook</li>
<li>ipython</li>
<li>scipyserver</li>
<li>scipystack</li>
<li>nbvierer</li>
</ul>
<p>简单说一下这几个镜像的区别 <code>ipython</code> 是以上几个镜像的共同的根镜像。<code>notebook</code> 提供了一个web的前端。<code>scipystack</code>在<code>ipython</code>的基础上安装了许多科学计算的包(cython,h5py,matplotlib,numpy,pandas,patsy,scikit-learn,scipy,seaborn,sympy,yt)，而<code>scipyserver</code>则在<code>scipystack</code>的基础上提供了web的前端。<code>nbviewer</code>则是<a href="nbviewer.ipython.org">nbviewer.ipython.org</a>的实现<br>更多详细信息请到GitHub上的<a href="https://github.com/ipython/docker-notebook" target="_blank" rel="external">docker-notebook</a> 查看<br>选择<code>scipystack</code>镜像最省事，但是需要下载的东西也越多。下文选择的也是<code>scipystack</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker pull ipython/scipyserver</span><br></pre></td></tr></table></figure></p>
<h4 id="运行IPython_容器">运行IPython 容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d --name IPythonApp -p 8888:8888 -e &#34;PASSWORD=your password&#34; -e &#34;USE_HTTP=1&#34; -v /home/zhiyue/repos/ipython-notebook:/notebooks ipython/scipyserver</span><br></pre></td></tr></table></figure>
<p>解析一下参数<code>-d</code> 是以后台的方式运行，<code>--name</code> 是容器的别名，<code>-p</code> 是端口映射，<code>-e</code> 是设置环境变量，这里的环境变量<code>PASSWORD</code>设置成你自己的密码就可以了，<code>USE_HTTP=1</code> 意思是使用http，<code>-v</code> 是设置数据卷，把宿主机的目录挂载到容器里，即使容器被删除，数据也可以保留下来</p>
<h3 id="Nginx_反向代理_IPython">Nginx 反向代理 IPython</h3><p>有两种方式，一种是使用官方的Nginx，另一种是使用<a href="https://registry.hub.docker.com/u/jwilder/nginx-proxy/" target="_blank" rel="external">jwilder / nginx-proxy</a>，后一种方法更加简单和方便</p>
<h4 id="方式1：nginx">方式1：nginx</h4><ul>
<li><p>使用Nginx的官方镜像<a href="https://registry.hub.docker.com/_/nginx/" target="_blank" rel="external">nginx</a></p>
</li>
<li><p>Nginx 配置文件<br><code>ipython-server.conf</code></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> &#10; map $http_upgrade $connection_upgrade &#123;&#10;        default upgrade;&#10;        &#39;&#39;      close;&#10; &#125;&#10; &#10;server&#123;&#10;        listen 80;&#10;        server_name note.everforget.com;&#10;        location / &#123;&#10;                proxy_pass http://ipython:8888;&#10;                proxy_http_version 1.1;&#10;                proxy_set_header Upgrade $http_upgrade;&#10;                proxy_set_header Connection &#34;upgrade&#34;;&#10;                proxy_set_header X-Real-IP $remote_addr;&#10;                proxy_set_header Host $host;&#10;                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#10;        &#125;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>这里面要注意一点是，ipython要使用websock因此要配置websocket，之前在这个问题查了好久。<br><code>proxy_pass http://ipython:8888;</code> <code>ipython</code>和后面容器连接时的别名有关。</p>
<ul>
<li>运行Nginx容器<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker run -d -p 80:80 --name nginx --link IPythonApp:ipython  -v `pwd`/config:/etc/nginx/conf.d  -v `pwd`/logs:/var/log/nginx nginx</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="方式2：nginx-proxy">方式2：nginx-proxy</h4><ul>
<li><p><a href="https://registry.hub.docker.com/u/jwilder/nginx-proxy/" target="_blank" rel="external">jwilder / nginx-proxy</a></p>
</li>
<li><p>运行nginx-proxy 容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 -v /var/run/docker.sock:/tmp/docker.sock:ro jwilder/nginx-proxy</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>运行ipython 容器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d -e &#34;VIRTUAL_HOST=ipython.everforget.com&#34; --name IPython -p 8888:8888 -e &#34;PASSWORD=xxxxxx&#34; -e &#34;USE_HTTP=1&#34; -v /home/zhiyue/repos/ipython-notebook:/notebooks ipython/scipyserver</span><br></pre></td></tr></table></figure>
<p>最后放一张图：</p>
<p><img src="http://zhiyue.qiniudn.com/15-6-8/23580903.jpg" alt=""></p>
<p>这样就可以随时通过web来使用python了。</p>
<h3 id="参考">参考</h3><ul>
<li><p><a href="http://blog.opskumu.com/docker.html" target="_blank" rel="external">Docker 笔记 By 枯木</a></p>
</li>
<li><p><a href="http://godleon.github.io/blog/2014/11/23/use-docker-to-rapidly-create-ipython-notebook-environments/" target="_blank" rel="external">[Docker] 快速建立 IPython Notebook 環境</a></p>
</li>
<li><a href="http://blog.shiqichan.com/Deploying-Nginx-with-Docker/" target="_blank" rel="external">在Docker下部署Nginx</a></li>
<li><a href="http://mindonmind.github.io/2013/02/08/ipython-notebook-interactive-computing-new-era/" target="_blank" rel="external">IPython Notebook: 交互计算新时代</a></li>
</ul>
<hr>
<p>更新日志：</p>
<ul>
<li>2015-6-8 添加配图</li>
<li>2015-6-6 第一次撰写</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://zhiyue.qiniudn.com/15-6-8/63734849.jpg" alt="docker"><br>]]>
    
    </summary>
    
      <category term="Docker" scheme="http://blog.printf.me/tags/Docker/"/>
    
      <category term="IPyhton" scheme="http://blog.printf.me/tags/IPyhton/"/>
    
      <category term="Python" scheme="http://blog.printf.me/tags/Python/"/>
    
      <category term="nginx" scheme="http://blog.printf.me/tags/nginx/"/>
    
      <category term="系统运维" scheme="http://blog.printf.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.printf.me/2015/04/30/hello-world/"/>
    <id>http://blog.printf.me/2015/04/30/hello-world/</id>
    <published>2015-04-30T04:09:41.000Z</published>
    <updated>2015-06-08T07:55:14.866Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo搭建Wiki]]></title>
    <link href="http://blog.printf.me/2015/04/30/Hexo%E6%90%AD%E5%BB%BAWiki/"/>
    <id>http://blog.printf.me/2015/04/30/Hexo搭建Wiki/</id>
    <published>2015-04-30T04:09:41.000Z</published>
    <updated>2015-06-08T07:55:14.866Z</updated>
    <content type="html"><![CDATA[<ul>
<li>2015-4-30 第一次编写</li>
</ul>
<hr>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/Hexo.png" alt="此处输入图片的描述"></p>
<h2 id="0x01准备：">0x01准备：</h2><ol>
<li><a href="http://twitter.com/tommy351" target="_blank" rel="external">tommy351</a>编写的静态博客框架<a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>（目前版本是3.0.x）</li>
<li><a href="https://github.com/wzpan/hexo-theme-wixo/" target="_blank" rel="external">Wixo</a>的主题</li>
<li>GitHub的repos的gh-pages 分支放置wiki，托管于GitHub的Pages服务上</li>
<li>源码放置在Github同一个repos下的source分支下进行版本管理</li>
<li><a href="https://travis-ci.org/" target="_blank" rel="external">Travis CI</a>自动化测试框架自动编译网站</li>
</ol>
<a id="more"></a>
<h2 id="0x02过程：">0x02过程：</h2><h3 id="安装NodeJs">安装NodeJs</h3><p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/NodeJs.png" alt="此处输入图片的描述"><br>因为Hexo是使用Nodejs编写的，所以需要部署NodeJs的环境</p>
<ul>
<li><a href="https://nodejs.org/" target="_blank" rel="external">下载nodejs</a></li>
</ul>
<p>Windows 可以直接下载到安装包安装即可，其它系统稍后补充</p>
<h3 id="安装Hexo(3-x以上)">安装Hexo(3.x以上)</h3><h4 id="安装hexo-cli">安装hexo-cli</h4><pre><code>$ npm install hexo-<span class="keyword">cli</span> -<span class="keyword">g</span>
</code></pre><p>3.x以上版本相比2.x以下版本使用上有差别，3.x版本模块化程度较高，你可以不用经常更新hexo-cli，但是多个hexo版本可以共存</p>
<h4 id="初始化目录">初始化目录</h4><pre><code><span class="variable">$ </span>hexo init <span class="constant">Wiki</span>
</code></pre><blockquote>
<p>PS I:> hexo init Wiki<br>    INFO  Copying data to I:\Wiki<br>    INFO  You are almost done! Don’t forget to run ‘npm install’ before you start blogging with Hexo!</p>
</blockquote>
<p>这样就会建立一个Wiki的文件夹，在文件夹里已经做了一些初始化的工作:</p>
<ul>
<li>目录结构：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- wiki&#10;    |-- scaffolds           #&#24037;&#20855;&#27169;&#26495;&#10;    |       |-- draft.md&#10;    |       |-- page.md&#10;    |       |-- post.md&#10;    |-- source&#10;    |   |-- _posts          #&#25991;&#31456;&#25991;&#20214;&#22841;&#10;    |         |-- hello-world.md&#10;    |-- themes              #&#20027;&#39064;&#25991;&#20214;&#22841;&#10;    |     |-- landscape     # &#40664;&#35748;&#20027;&#39064;&#25991;&#20214;&#22841;&#10;    |-- .gitignore&#10;    |-- _config.yml         #&#20840;&#23616;&#37197;&#32622;&#25991;&#20214;&#10;    |-- package.json        #&#25554;&#20214;&#30340;&#37197;&#32622;&#65292;&#20351;&#29992;npm install --save &#20250;&#20889;&#20837;&#36825;&#37324;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>另外还有<code>source/_drafts</code>存放的是草稿</p>
<h4 id="安装_Hexo">安装 Hexo</h4><p>切到Wiki目录下，然后安装指定版本的Hexo &gt; 3.0</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo <span class="comment">--save</span></span>
</code></pre><p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/hexo_install.png" alt="此处输入图片的描述"><br>然后，安装相关默认的npm插件</p>
<pre><code>$ npm <span class="keyword">install</span> 
</code></pre><p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/npm_install.png" alt="此处输入图片的描述"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo-renderer-ejs@0.1.0 node_modules\hexo-renderer-ejs&#10;&#9500;&#9472;&#9472; ejs@1.0.0&#10;&#9492;&#9472;&#9472; lodash@2.4.2&#10;&#10;hexo-generator-index@0.1.1 node_modules\hexo-generator-index&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9492;&#9472;&#9472; hexo-pagination@0.0.2 (utils-merge@1.0.0)&#10;&#10;hexo-generator-tag@0.1.1 node_modules\hexo-generator-tag&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9492;&#9472;&#9472; hexo-pagination@0.0.2 (utils-merge@1.0.0)&#10;&#10;hexo-generator-category@0.1.2 node_modules\hexo-generator-category&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9492;&#9472;&#9472; hexo-pagination@0.0.2 (utils-merge@1.0.0)&#10;&#10;hexo-generator-archive@0.1.2 node_modules\hexo-generator-archive&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9492;&#9472;&#9472; hexo-pagination@0.0.2 (utils-merge@1.0.0)&#10;&#10;hexo-renderer-marked@0.2.5 node_modules\hexo-renderer-marked&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9500;&#9472;&#9472; marked@0.3.3&#10;&#9500;&#9472;&#9472; strip-indent@1.0.1 (get-stdin@4.0.1)&#10;&#9492;&#9472;&#9472; hexo-util@0.1.6 (ent@2.2.0, bluebird@2.9.25, highlight.js@8.5.0)&#10;&#10;hexo-renderer-stylus@0.2.3 node_modules\hexo-renderer-stylus&#10;&#9500;&#9472;&#9472; stylus@0.50.0 (css-parse@1.7.0, mkdirp@0.3.5, sax@0.5.8, source-map@0.1.43, debug@2.1.3, glob@3.2.11)&#10;&#9492;&#9472;&#9472; nib@1.1.0 (stylus@0.49.3)&#10;&#10;hexo-server@0.1.2 node_modules\hexo-server&#10;&#9500;&#9472;&#9472; object-assign@2.0.0&#10;&#9500;&#9472;&#9472; open@0.0.5&#10;&#9500;&#9472;&#9472; mime@1.3.4&#10;&#9500;&#9472;&#9472; bluebird@2.9.25&#10;&#9500;&#9472;&#9472; chalk@0.5.1 (ansi-styles@1.1.0, escape-string-regexp@1.0.3, supports-color@0.2.0, strip-ansi@0.3.0, has-ansi@0.1.0)&#10;&#9500;&#9472;&#9472; compression@1.4.3 (vary@1.0.0, on-headers@1.0.0, bytes@1.0.0, debug@2.1.3, compressible@2.0.2, accepts@1.2.5)&#10;&#9500;&#9472;&#9472; morgan@1.5.2 (basic-auth@1.0.0, depd@1.0.1, debug@2.1.3, on-finished@2.2.1)&#10;&#9500;&#9472;&#9472; connect@3.3.5 (utils-merge@1.0.0, parseurl@1.3.0, debug@2.1.3, finalhandler@0.3.4)&#10;&#9492;&#9472;&#9472; serve-static@1.9.2 (utils-merge@1.0.0, escape-html@1.0.1, parseurl@1.3.0, send@0.12.2)</span><br></pre></td></tr></table></figure>
<p>默认安装了：</p>
<ul>
<li><a href="https://github.com/hexojs/hexo-renderer-ejs" target="_blank" rel="external">hexo-renderer-ejs</a>   <a href="https://github.com/tj/ejs" target="_blank" rel="external">EJS</a>渲染器</li>
<li><a href="https://github.com/hexojs/hexo-generator-index" target="_blank" rel="external">hexo-generator-index</a>   用来配置每页展示文章的数目</li>
<li><a href="https://github.com/hexojs/hexo-generator-tagtps://github.com/hexojs/hexo-generator-index" target="_blank" rel="external">hexo-generator-tag</a> 标签生成</li>
<li><a href="https://github.com/hexojs/hexo-generator-categoryr-tagtps://github.com/hexojs/hexo-generator-index" target="_blank" rel="external">hexo-generator-category</a> 目录生成</li>
<li><a href="https://github.com/hexojs/hexo-generator-archive" target="_blank" rel="external">hexo-generator-archive</a> 文章生成</li>
<li><a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="external">hexo-renderer-marked</a> markdown 渲染器</li>
<li><a href="https://github.com/hexojs/hexo-renderer-stylus" target="_blank" rel="external">hexo-renderer-stylus</a> CSS渲染器</li>
<li><a href="https://github.com/hexojs/hexo-server" target="_blank" rel="external">hexo-server</a> Server module for Hexo</li>
</ul>
<p>安装其他常用的插件：</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span>
$ npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span>
$ npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span>
$ npm <span class="keyword">install</span> hexo-fs <span class="comment">--save</span>
$ npm <span class="keyword">install</span> hexo-renderer-mathjax <span class="comment">--save</span></span>
</code></pre><ul>
<li><p><a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a> </p>
<blockquote>
<p>Git deployer plugin for Hexo.</p>
</blockquote>
</li>
<li><p><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a></p>
<blockquote>
<p>Feed generator for Hexo.</p>
</blockquote>
</li>
<li><p><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="external">hexo-generator-sitemap</a></p>
<blockquote>
<p>Sitemap generator for Hexo</p>
</blockquote>
</li>
<li><p><a href="https://github.com/hexojs/hexo-fs" target="_blank" rel="external">hexo-fs</a></p>
<blockquote>
<p>文件 IO 为了要使用mathjax模块</p>
</blockquote>
</li>
<li><p><a href="https://github.com/phoenixcw/hexo-renderer-mathjax" target="_blank" rel="external">hexo-renderer-mathjax</a></p>
<blockquote>
<p>Add support of MathJax for Hexo.</p>
</blockquote>
</li>
</ul>
<p>更多的插件参见<a href="http://hexo.io/plugins/" target="_blank" rel="external">官网插件列表</a> 或者 <a href="https://github.com/hexojs/hexo/wiki/Plugins" target="_blank" rel="external">Github上的列表</a></p>
<h3 id="配置_Hexo">配置 Hexo</h3><p> 初始化目录</p>
<pre><code><span class="variable">$ </span>git init
</code></pre><p>创建<code>source</code>分支</p>
<pre><code>$ git checkout -<span class="tag">b</span> source
</code></pre><h4 id="安装与配置主题">　安装与配置主题</h4><ul>
<li>fork 主题</li>
</ul>
<p>从<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">主题列表</a> 挑选自己喜欢的主题,然后fork到自己的repos，这里使用的是Wiki主题Wixo</p>
<blockquote>
<p>wiki for hexo </p>
</blockquote>
<p>选取 w i x o</p>
<ul>
<li>修改主题配置文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd .. #&#20999;&#25442;&#21040;&#19978;&#32423;&#30446;&#24405;&#10;$ git clone https://github.com/zhiyue/hexo-theme-wixo themes/wixo</span><br></pre></td></tr></table></figure>
<p>修改完成后再push上GitHub上</p>
<ul>
<li>下载主题</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd Wiki     #&#20999;&#25442;&#21040;Wiki&#30446;&#24405;&#10;$ git clone https://github.com/zhiyue/hexo-theme-wixo themes/wixo</span><br></pre></td></tr></table></figure>
<ul>
<li><p>使用主题<br>去全局配置文件 <code>_config.yml</code> 修改参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Extensions&#10;## Plugins: http://hexo.io/plugins/&#10;## Themes: http://hexo.io/themes/&#10;theme: wixo #&#36825;&#37324;&#20462;&#25913;&#20026;&#20027;&#39064;&#30340;&#21517;&#23383;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置主题<br><code>wixo</code>主题配置：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: atom.xml&#10;fancybox: true&#10;favicon: favicon.ico&#10;fold: true&#10;google_analytics:</span><br></pre></td></tr></table></figure>
<p>这个不同的主题配置会很不一样，下面这个是<code>modernist</code>主题的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">menu:&#10;  Home: /&#10;  Archives: /archives&#10;rss: /atom.xml&#10;&#10;archive_date_format: MMM DD&#10;fancybox: true&#10;&#10;duoshuo_shortname: zhiyue&#10;&#10;google_analytics:&#10;favicon: /favicon.ico</span><br></pre></td></tr></table></figure></p>
<ul>
<li>使用子模块管理主题</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule add https://github.com/zhiyue/hexo-theme-wixo.git themes/wixo</span><br></pre></td></tr></table></figure>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/git_submodule.png" alt="此处输入图片的描述"></p>
<ul>
<li>主题的更新<br>如果fork的主题作者有更新，可以在GitHub上pull过来然后再合并，然后在自己的blog的目录下要注意一下子模块的更新模式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git submodule init &#10;$ git submodule update&#10;$ cd themes/wixo&#10;$ git checkout HEAD  #&#20999;&#25442;&#21040;&#26368;&#26032;&#30340;head&#10;$ cd -&#10;$ git add.&#10;$ git commit -m &#34;update submodule &#34; #&#26356;&#26032;submodule&#30340;&#26631;&#35760;</span><br></pre></td></tr></table></figure>
<h4 id="全局配置">　全局配置</h4><p>修改_config.yml 文件只需修改几个，通常需要修改的地方:</p>
<ul>
<li>站点名称</li>
<li>URL格式</li>
<li>归档设置</li>
<li>disqus评论用户名</li>
<li>部署配置</li>
</ul>
<blockquote>
<p>注意冒号后面添加一个半角空格 再设置参数</p>
</blockquote>
<p>下面是我的<code>_config.yml</code>的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration&#10;## Docs: http://hexo.io/docs/configuration.html&#10;## Source: https://github.com/hexojs/hexo/&#10;&#10;# Site&#10;title: zhiyue   ## &#32593;&#31449;&#26631;&#39064;&#10;subtitle:       ## &#32593;&#31449;&#21103;&#26631;&#39064;&#10;description:    ## &#32593;&#31449;&#25551;&#36848;&#10;author: zhiyue  ## &#24744;&#30340;&#21517;&#23383;&#10;language: zh_CN ## &#32593;&#31449;&#20351;&#29992;&#30340;&#35821;&#35328;&#10;timezone:       ## &#32593;&#31449;&#26102;&#21306;&#12290;Hexo &#39044;&#35774;&#20351;&#29992;&#24744;&#30005;&#33041;&#30340;&#26102;&#21306;&#10;&#10;# URL&#10;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&#10;##&#22914;&#26524;&#24744;&#30340;&#32593;&#31449;&#23384;&#25918;&#22312;&#23376;&#30446;&#24405;&#20013;&#65292;&#20363;&#22914; http://yoursite.com/blog&#65292;&#21017;&#35831;&#23558;&#24744;&#30340; url &#35774;&#20026; http://yoursite.com/blog &#24182;&#25226; ##root &#35774;&#20026; /blog/&#12290;&#10;url: http://blog.printf.me              ## &#32593;&#22336;&#10;root: /                                 ## &#32593;&#31449;&#26681;&#30446;&#24405;&#10;permalink: :year/:month/:day/:title/    ## &#25991;&#31456;&#30340; &#27704;&#20037;&#38142;&#25509; &#26684;&#24335;&#10;permalink_defaults:                     ## &#27704;&#20037;&#38142;&#25509;&#20013;&#21508;&#37096;&#20998;&#30340;&#40664;&#35748;&#20540; &#10;&#10;&#10;&#10;# Directory&#10;source_dir: source          ## &#36164;&#28304;&#25991;&#20214;&#22841;&#65292;&#36825;&#20010;&#25991;&#20214;&#22841;&#29992;&#26469;&#23384;&#25918;&#20869;&#23481;&#12290;&#10;public_dir: public          ## &#20844;&#20849;&#25991;&#20214;&#22841;&#65292;&#36825;&#20010;&#25991;&#20214;&#22841;&#29992;&#20110;&#23384;&#25918;&#29983;&#25104;&#30340;&#31449;&#28857;&#25991;&#20214;&#12290;&#10;tag_dir: tags               ## &#26631;&#31614;&#25991;&#20214;&#22841;&#10;archive_dir: archives       ## &#24402;&#26723;&#25991;&#20214;&#22841;&#10;category_dir: categories    ## &#20998;&#31867;&#25991;&#20214;&#22841;&#10;code_dir: downloads/code    ## Include code &#25991;&#20214;&#22841;&#10;i18n_dir: :lang             ## &#22269;&#38469;&#21270;&#65288;i18n&#65289;&#25991;&#20214;&#22841;&#10;skip_render:                ## &#36339;&#36807;&#25351;&#23450;&#25991;&#20214;&#30340;&#28210;&#26579;&#65292;&#24744;&#21487;&#20351;&#29992; glob &#26469;&#37197;&#32622;&#36335;&#24452;&#12290;&#10;&#10;# Writing&#10;new_post_name: :title.md                ## File name of new posts&#10;default_layout: post                    ## &#39044;&#35774;&#24067;&#23616;&#10;titlecase: false                        ## Transform title into titlecase&#10;external_link: true                     ## Open external links in new tab&#10;filename_case: 0                        ## &#25226;&#25991;&#20214;&#21517;&#31216;&#36716;&#25442;&#20026; (1) &#23567;&#20889;&#25110; (2) &#22823;&#20889;&#10;render_drafts: false                    ## &#26174;&#31034;&#33609;&#31295;&#10;post_asset_folder: false                ## &#21551;&#21160; Asset &#25991;&#20214;&#22841;&#10;relative_link: false                    ## &#25226;&#38142;&#25509;&#25913;&#20026;&#19982;&#26681;&#30446;&#24405;&#30340;&#30456;&#23545;&#20301;&#22336;&#10;future: true                            ## &#26174;&#31034;&#26410;&#26469;&#30340;&#25991;&#31456;&#10;highlight:                              ## &#20195;&#30721;&#22359;&#30340;&#35774;&#32622;&#10;  enable: true                          ## &#21551;&#29992;&#10;  line_number: true                     ## &#34892;&#21495;&#10;  tab_replace: true                     ## tab &#26367;&#25442;&#10;&#10;# Category &#38; Tag&#10;default_category: uncategorized         ## &#40664;&#35748;&#20998;&#31867;&#10;category_map:                           ## &#20998;&#31867;&#21035;&#21517;&#10;tag_map:                                ## &#26631;&#31614;&#21035;&#21517;&#10;&#10;# Date / Time format&#10;## Hexo uses Moment.js to parse and display date&#10;## You can customize the date format as defined in&#10;## http://momentjs.com/docs/#/displaying/format/&#10;date_format: YYYY-MM-DD                 ## &#26085;&#26399;&#26684;&#24335;&#10;time_format: HH:mm:ss                   ## &#26102;&#38388;&#26684;&#24335;&#10;&#10;# Pagination&#10;## Set per_page to 0 to disable pagination&#10;per_page: 10                            ## &#27599;&#39029;&#26174;&#31034;&#30340;&#25991;&#31456;&#37327; (0 = &#20851;&#38381;&#20998;&#39029;&#21151;&#33021;)&#10;pagination_dir: page                    ## &#20998;&#39029;&#30446;&#24405;&#10;&#10;# Extensions&#10;## Plugins: http://hexo.io/plugins/&#10;## Themes: http://hexo.io/themes/&#10;theme: modernist                        ## &#24403;&#21069;&#20027;&#39064;&#21517;&#31216;&#10;&#10;# Deployment&#10;## Docs: http://hexo.io/docs/deployment.html&#10;deploy:                                 ##&#37096;&#32626;&#10;  type:</span><br></pre></td></tr></table></figure></p>
<h3 id="写文章">写文章</h3><pre><code>$ hexo <span class="built_in">new</span> <span class="built_in">post</span> <span class="string">"tiltle"</span>
</code></pre><p>这样就会在<code>source/_post/</code>下创建一个<code>tiltle.md</code><br>Hexo使用markdown语法的纯文本存放文章 后缀为.md 你可以在_post文件夹里面新建这个后缀的.md文件使用的全是UTF-8编码</p>
<p>格式如下：</p>
<pre><code><span class="label">title:</span> title <span class="preprocessor">#文章标题</span>
<span class="label">date:</span> <span class="number">2015</span>-<span class="number">02</span>-<span class="number">05</span> <span class="number">12</span>:<span class="number">47</span>:<span class="number">44</span> <span class="preprocessor">#文章生成时间</span>
<span class="label">categories:</span> <span class="preprocessor">#文章分类目录 可以省略</span>
<span class="label">tags:</span> <span class="preprocessor">#文章标签 可以省略</span>
<span class="label">description:</span> <span class="preprocessor">#你对本页的描述 可以省略</span>
</code></pre><p>多标签注意语法格式 如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags:&#10;  - &#26631;&#31614;1&#10;  - &#26631;&#31614;2&#10;  - &#26631;&#31614;3&#10;  - etc...</span><br></pre></td></tr></table></figure></p>
<p>正文中可以使用<!--more-->设置文章摘要 如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#20197;&#19978;&#26159;&#25991;&#31456;&#25688;&#35201;&#10;  &#60;!--more--&#62;&#10;  &#20197;&#19979;&#26159;&#20313;&#19979;&#20840;&#25991;</span><br></pre></td></tr></table></figure></p>
<h3 id="生成与部署">生成与部署</h3><ul>
<li>生成blog静态文件：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/hexo_g.png" alt="此处输入图片的描述"></p>
<ul>
<li>在本地环境测试：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/preview.png" alt="此处输入图片的描述"></p>
<h4 id="GitHub_配置">GitHub 配置</h4><ul>
<li>创建gh-pages分支<br>如果要部署在github上，必须名称叫gh-pages。所以先创建一个叫gh-pages的分支</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout --orphan gh-pages&#10;$ git rm -rf .    # &#30733;&#25481;&#25152;&#26377;&#26723;&#26696;&#37325;&#20358;&#10;# &#21152;&#26032;&#26723;&#26696;&#10;## git add .&#10;$ git commit -m &#39;create new branch&#39;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>提交到GitHub<br>在GitHub创建一个新的repos，然后再本地使用以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin https://github.com/(github&#29992;&#25143;&#21517;)/(&#39033;&#30446;&#21517;&#31216;).git  ##&#28155;&#21152;&#36828;&#31243;&#20179;&#24211;&#10;$ git push --all origin                           ##push</span><br></pre></td></tr></table></figure>
</li>
<li><p>自定义域名设置<br>在<code>source</code>文件夹下创建<code>CNAME</code>文件 写入你的自定义域名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog.printf.me</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置dnspod<br>添加<code>CNAME</code>记录 记录值<code>zhiyue.github.io.</code><br><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/dnspod.png" alt="此处输入图片的描述"></p>
</li>
<li><p>404 页面 和 favicon.ico<br>在<code>source</code>文件夹下 创建<code>404.html</code> 和 把<code>favicon.ico</code> 放置至此</p>
</li>
<li><p>deploy 配置<br>修改_config.yml文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Deployment&#10;## Docs: http://hexo.io/docs/deployment.html&#10;deploy:&#10;  type: git&#10;  message: update&#10;  repo: https://github.com/zhiyue/blog.git&#10;  branch: gh-pages</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="配置travis_ci">配置travis ci</h3><ul>
<li><p>生成<code>Personal access tokens</code><br>在<a href="https://github.com/settings/tokens" target="_blank" rel="external">GitHub token 生成页面</a>按照以下步骤生成一个可以让第三方访问的<code>token</code>，它具有可以写<code>repos</code>的权限。这样就可以在生成网站的时候通过这个<code>token</code>提交到<code>repos</code>上了。<br><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/generate_token.png" alt="generate token"></p>
</li>
<li><p>启用<code>travis ci</code><br>登陆<a href="https://travis-ci.org" target="_blank" rel="external">travis ci</a>绑定GitHub的账户，<code>travis ci</code>会同步<code>repos</code>的列表，选择你想启用自动化测试的<code>repos</code><br><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/travis.png" alt="travis ci "></p>
</li>
<li><p>编写<code>.travis.yml</code><br><code>travis ci</code>会依据<code>.travis.yml</code>进行一些环境的设置安装以及后续的测试。下面的<code>.travis.yml</code>是参考网上的yml编写的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Deploy hexo site by travis-ci&#10;# https://github.com/jkeylu/deploy-hexo-site-by-travis-ci&#10;# LICENSE: MIT&#10;#&#10;# 1. Copy this file to the root of your repository, then rename it to &#39;.travis.yml&#39;&#10;# 2. Replace &#39;YOUR NAME&#39; and &#39;YOUR EMAIL&#39; at line 29&#10;# 3. Add an Environment Variable &#39;DEPLOY_REPO&#39;&#10;#     1. Generate github access token on https://github.com/settings/applications#personal-access-tokens&#10;#     2. Add an Environment Variable on https://travis-ci.org/&#123;github username&#125;/&#123;repository name&#125;/settings/env_vars&#10;#         Variable Name: DEPLOY_REPO&#10;#         Variable Value: https://&#123;githb access token&#125;@github.com/&#123;github username&#125;/&#123;repository name&#125;.git &#10;#         Example: DEPLOY_REPO=https://6b75cfe9836f56e6d21187622730889874476c23@github.com/jkeylu/test-hexo-on-travis-ci.git&#10;&#10;language: node_js&#10;&#10;node_js:&#10;  - &#34;0.12&#34;  #&#35774;&#32622;node_js&#30340;&#29256;&#26412;&#10;&#10;branches:&#10;  only:&#10;    - source    #&#26816;&#27979;&#30340;&#20998;&#25903;&#65292;&#19968;&#26086;&#20998;&#25903;&#26377;&#26032;&#30340;&#25552;&#20132;&#23601;&#20250;&#35302;&#21457;&#33050;&#26412;&#10;&#10;before_install: #&#23433;&#35013;&#21069;&#30340;&#24037;&#20316;&#10;- npm install -g hexo-cli&#10;&#10;install:&#10;#- npm install hexo-renderer-ejs@0.1.0 --save&#10;#- npm install hexo-renderer-marked@0.1.0 --save&#10;#- npm install hexo-renderer-stylus@0.1.0 --save&#10;#- npm install hexo-generator-feed@0.2.1 --save&#10;#- npm install hexo-generator-sitemap@0.2.0 --save&#10;#- npm install hexo-tag-bootstrap@0.0.6 --save&#10;- npm install&#10;&#10;&#10;script:                         #&#36816;&#34892;&#30340;&#27979;&#35797;&#33050;&#26412;&#10;  - &#34;git submodule init&#34;&#10;  - &#34;git submodule update&#34;&#10;  - &#34;hexo generate &#34;&#10;  &#10;after_success:                      #push&#21040;github&#19978;&#10;  - &#34;git clone $DEPLOY_REPO git_deploy&#34;&#10;  - &#34;cd git_deploy&#34;&#10;  - &#34;git checkout gh-pages&#34;&#10;  - &#34;cd ..&#34;&#10;  - &#34;rm -r git_deploy/*&#34;&#10;  - &#34;cp -r public/* git_deploy&#34;&#10;  - &#34;cd git_deploy&#34;&#10;  - &#34;git config --global push.default simple&#34;&#10;  - &#34;git config --global user.name &#39;zhiyue&#39;&#34;&#10;  - &#34;git config --global user.email cszhiyue@gmail.com&#34;&#10;  - &#34;git add -A&#34;&#10;  - &#34;git commit -m &#39;Site updated&#39;&#34;&#10;  - &#34;git push -q&#34;</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置环境变量<code>DEPLOY_REPO</code><br> <code>.travis.yml</code>中用到的<code>DEPLOY_REPO</code>可以按照图片的步骤设置</p>
</li>
</ul>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/create_var.png" alt="genertare var"></p>
<ul>
<li>travis ci 自动化生成与部署</li>
</ul>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/test.png" alt="此处输入图片的描述"></p>
<ul>
<li>网站截图：</li>
</ul>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/wiki_2.png" alt="此处输入图片的描述"></p>
<h2 id="0x03_参考：">0x03 参考：</h2><ul>
<li><a href="http://ippotsuko.com/build-your-hexo-blog-3/" target="_blank" rel="external">Hexo 3.0 靜態博客使用指南</a></li>
<li><a href="http://segmentfault.com/a/1190000000406019" target="_blank" rel="external">使用Jekyll在Github上搭建个人博客（将本地博客上传至github）</a></li>
<li><a href="https://ihower.tw/blog/archives/5691" target="_blank" rel="external">如何建立一個沒有 Parent 的獨立 Git branch</a></li>
<li><a href="http://blog.csdn.net/u010520912/article/details/18993001" target="_blank" rel="external">使用Git将本地代码上传到GitHub</a></li>
</ul>
<hr>
<p>todo:</p>
<ul>
<li>补充其他系统的详细情况</li>
<li>补充多说插件和谷歌analyse</li>
<li><del>详细补充配置文件</del></li>
<li><del>加配图</del></li>
</ul>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>2015-4-30 第一次编写</li>
</ul>
<hr>
<p><img src="http://7xilqm.com1.z0.glb.clouddn.com/Hexo_wiki/Hexo.png" alt="此处输入图片的描述"></p>
<h2 id="0x01准备：">0x01准备：</h2><ol>
<li><a href="http://twitter.com/tommy351">tommy351</a>编写的静态博客框架<a href="http://hexo.io/">Hexo</a>（目前版本是3.0.x）</li>
<li><a href="https://github.com/wzpan/hexo-theme-wixo/">Wixo</a>的主题</li>
<li>GitHub的repos的gh-pages 分支放置wiki，托管于GitHub的Pages服务上</li>
<li>源码放置在Github同一个repos下的source分支下进行版本管理</li>
<li><a href="https://travis-ci.org/">Travis CI</a>自动化测试框架自动编译网站</li>
</ol>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.printf.me/tags/Hexo/"/>
    
      <category term="Wiki" scheme="http://blog.printf.me/tags/Wiki/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mathjax]]></title>
    <link href="http://blog.printf.me/2015/04/30/mathjax/"/>
    <id>http://blog.printf.me/2015/04/30/mathjax/</id>
    <published>2015-04-30T02:13:26.000Z</published>
    <updated>2015-06-08T07:55:14.866Z</updated>
    <content type="html"><![CDATA[<p>$$<br>\frac{\partial u}{\partial t} = h^2 \left( \frac{\partial^2 u}{\partial x^2} + \frac{\partial^2 u}{\partial y^2} + \frac{\partial^2 u}{\partial z^2}\right)<br>$$</p>
<a id="more"></a>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C</span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>$$<br>\frac{\partial u}{\partial t} = h^2 \left( \frac{\partial^2 u}{\partial x^2} + \frac{\partial^2 u}{\partial y^2} + \frac{\partial^2 u}{\partial z^2}\right)<br>$$</p>]]>
    
    </summary>
    
      <category term="mathjax" scheme="http://blog.printf.me/tags/mathjax/"/>
    
  </entry>
  
</feed>